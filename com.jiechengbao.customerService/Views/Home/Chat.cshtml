<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
    <title></title>
    <link href="~/Contents/css/mui.min.css" rel="stylesheet" />
    <link href="~/Contents/css/im-chat.css" rel="stylesheet" />
</head>

<body contextmenu="return false;">
    <div id="offCanvasWrapper" class="mui-off-canvas-wrap mui-draggable">
        <aside id="offCanvasSide" class="mui-off-canvas-right">
            <div id="offCanvasSideScroll" class="mui-scroll-wrapper">
                <div class="mui-scroll">
                    <ul class="mui-table-view mui-table-view-chevron mui-table-view-inverted"></ul>
                </div>
            </div>
        </aside>
        <div class="mui-inner-wrap">
            <header class="mui-bar mui-bar-nav">
                <a class="mui-action-back mui-icon mui-icon-left-nav mui-pull-left"></a>
                <a id="offCanvasBtn" href="#offCanvasSide" class="mui-icon mui-action-menu mui-icon-bars mui-pull-right"></a>
                <h1 class="mui-title"></h1>
            </header>
            <pre id='h'></pre>
            <div id="offCanvasContentScroll" class="mui-content mui-scroll-wrapper">
                <div class="mui-scroll">
                    <div class="mui-content">
                        <div id='msg-list'>

                        </div>
                        <div class="div-block" id="msg_end"></div>
                    </div>
                </div>
            </div>
            <footer>
                <div class="footer-center">
                    <textarea id='msg-text' type="text" class='input-text' style="position:relative;left:-36px;"></textarea>
                </div>
                <label for="" class="footer-right">
                    <button id="btn" class="btnSent">发送</button>
                </label>
            </footer>
        </div>
    </div>


    <script src="~/Contents/js/jquery.min.js"></script>
    <script src="~/Contents/js/mui.min.js"></script>
    <script src="https://cdn.wilddog.com/js/client/current/wilddog.js"></script>

    <!--界面相关-->
    <script>
        var moveTogether = false;
        //侧滑容器的class列表，增加.mui-slide-in即可实现菜单移动、主界面不动的效果；

        var offCanvasWrapper = mui('#offCanvasWrapper');
        var classList = offCanvasWrapper[0].classList;

        //主界面容器
        var offCanvasInner = offCanvasWrapper[0].querySelector('.mui-inner-wrap');
        //菜单容器
        var offCanvasSide = document.getElementById("offCanvasSide");
        ////Android暂不支持整体移动动画
        //if (!mui.os.android) {
        //    document.getElementById("move-togger").classList.remove('mui-hidden');
        //    var spans = document.querySelectorAll('.android-only');
        //    for (var i = 0, len = spans.length; i < len; i++) {
        //        spans[i].style.display = "none";
        //    }
        //}

        //classList.add('mui-slide-in');
        //offCanvasWrapper.offCanvas().refresh();
        //document.getElementById('offCanvasShow').addEventListener('tap', function () {
        //    offCanvasWrapper.offCanvas('show');
        //});
        //document.getElementById('offCanvasHide').addEventListener('tap', function () {
        //    offCanvasWrapper.offCanvas('close');
        //});
        //主界面和侧滑菜单界面均支持区域滚动；
        mui('#offCanvasSideScroll').scroll();
        mui('#offCanvasContentScroll').scroll();
        //实现ios平台的侧滑关闭页面；
        if (mui.os.plus && mui.os.ios) {
            offCanvasWrapper[0].addEventListener('shown', function (e) { //菜单显示完成事件
                plus.webview.currentWebview().setStyle({
                    'popGesture': 'none'
                });
            });
            offCanvasWrapper[0].addEventListener('hidden', function (e) { //菜单关闭完成事件
                plus.webview.currentWebview().setStyle({
                    'popGesture': 'close'
                });
            });
        }
    </script>

    <!--数据相关-->
    <script>
        // 当前 客户的 openId
        var currentCustomerOpenId = "@ViewBag.OpenId";
        //console.log("当前客户的openId:" + currentCustomerOpenId);

        // 当前 客户的 头像信息
        var currentCustomerHeadImage = "@ViewBag.HeadImage";
        //console.log("当前客户的头像信息:" + currentCustomerHeadImage);

        // 当前 客户的 昵称
        var currentCustomerNickName = "@ViewBag.NickName";
        //console.log("当前客户的昵称:" + currentCustomerNickName);

        var count = 0;
        var data = new Wilddog('https://jcbcs.wilddogio.com/ChatMess');
        var dataurl = "https://jcbcs.wilddogio.com/ChatMess/";
        var customer = null;
        var bottom_div = document.getElementById("msg_end");

        // 获取 客服列表  并列在侧边栏
        var getCSList = function () {
            $.ajax({
                url: "/Home/GetCSList",
                type: "POST",
                success: function (data) {
                    if (data == "" || data == null) {
                        mui.toast("获取的客服列表为空");
                        return;
                    }
                    else {
                        var cslist = JSON.parse(data);
                        var html = "";
                        $.each(cslist, function (index, item) {
                            html += "<li class='mui-table-view-cell' id='" + item.OpenId + "'>" + item.NickName + "</li>";
                            count++;
                        });

                        $(".mui-table-view").html(html);
                    }
                },
                error: function () {
                    mui.toast("获取客服列表失败");
                }
            });
        }

        $(document).ready(function () {
            // 加载 客服列表
            getCSList();

            // 加载 上次访问的聊天记录
            var currentCSOpenId = localStorage.getItem("CurrentCSOpenId");
            var currentCSNickName = localStorage.getItem("CurrentCSNickName");

            if (currentCSOpenId == null || currentCSOpenId == undefined) {

                // 当当前客服Id为空时  随机选择一个
                var randomcount = getRandom(count);
                var randomCS_li = $(".mui-table-view").children().eq(randomcount);
                if (randomCS_li != undefined && randomCS_li != null) {
                    localStorage.setItem("CurrentCSOpenId", randomCS_li.attr("id"));
                    localStorage.setItem("CurrentCSNickName", randomCS_li.text());
                }
            }
            else {
                $(".mui-title").html(localStorage.getItem("CurrentCSNickName"));
                getChatHistory(currentCustomerOpenId, currentCSOpenId);
                bottom_div.scrollIntoView();
            }

            var chatlist = localStorage.getItem(currentCustomerOpenId);
            chatlist = String(chatlist);
            var chatJson = $.parseJSON(chatlist);

            var temp_dataurl = dataurl + currentCSOpenId + "/" + currentCustomerOpenId;
            customer = new Wilddog(temp_dataurl);
            customer.off("child_added");
            customer.on("child_added", function (snapshot) {
                if (chatlist.indexOf(snapshot.val().time) < 0) {
                    var tempchat = JSON.parse("{\"timestamp\":\"" + snapshot.val().time + "\",\"name\":\"" + snapshot.val().name + "\",\"content\":\"" + snapshot.val().content + "\"}");

                    $.each(chatJson, function (index, item) {
                        if (item.CSOpenId == currentCSOpenId) {
                            item.Chat.push(tempchat);
                            console.log(item.Chat);

                            localStorage.setItem(currentCustomerOpenId, JSON.stringify(chatJson));
                            return false;
                        }
                    });

                    if (snapshot.val().name == currentCustomerNickName || snapshot.val().name == currentCSNickName) {
                        $("#msg-list").html($("#msg-list").html() + getInsertHTML(snapshot.val().name, snapshot.val().content));
                    }
                }
            });
        });

        mui(".mui-table-view").on("tap", ".mui-table-view-cell", function () {
            //console.log("点击了一个客服");
            // 先找到点击的 客服 openId 和  昵称
            var currentCSOpenId = $(this).attr("id");
            //console.log("客服OpenId为: " + currentCSOpenId);

            var currentCSNickName = $(this).text();
            //console.log("客服昵称为: " + currentCSNickName);

            // 存一份在 localStorage 里面 以便之后使用
            localStorage.setItem("CurrentCSOpenId", currentCSOpenId);
            localStorage.setItem("CurrentCSNickName", currentCSNickName);

            // 设置 title
            $(".mui-title").html(currentCSNickName);
            $("textarea").val("");

            // 这里判断原来的 聊天记录 json 里面是否有当前 客服的Id  如果没有则添加一个客服id
            var currentCustomerOpenIdChat = localStorage.getItem(currentCustomerOpenId);
            var tempjson = $.parseJSON(currentCustomerOpenIdChat);

            if (String(currentCustomerOpenIdChat).indexOf(currentCSOpenId) < 0) {
                var tempCS = "{\"CSOpenId\":\"" + currentCSOpenId + "\",\"Chat\":[]}";

                tempjson.push($.parseJSON(tempCS));

                localStorage.setItem(currentCustomerOpenId, JSON.stringify(tempjson));
            }

            clearChat();
            getChatHistory(currentCustomerOpenId, currentCSOpenId);

            var temp_dataurl = dataurl + currentCSOpenId + "/" + currentCustomerOpenId;
            customer = new Wilddog(temp_dataurl);


            var chatlist = localStorage.getItem(currentCustomerOpenId);
            chatlist = String(chatlist);
            var chatJson = $.parseJSON(chatlist);

            customer.off("child_added");
            customer.on("child_added", function (snapshot) {
                if (chatlist.indexOf(snapshot.val().time) < 0) {
                    var tempchat = JSON.parse("{\"timestamp\":\"" + snapshot.val().time + "\",\"name\":\"" + snapshot.val().name + "\",\"content\":\"" + snapshot.val().content + "\"}");

                    $.each(chatJson, function (index, item) {
                        if (item.CSOpenId == currentCSOpenId) {

                            item.Chat.push(tempchat);
                            console.log(item.Chat);

                            //$("#msg-list").html($("#msg-list").html() + getInsertHTML(snapshot.val().name, snapshot.val().content));
                            localStorage.setItem(currentCustomerOpenId, String(JSON.stringify(chatJson)));

                            bottom_div.scrollIntoView();
                            return false;
                        }
                    });

                    if (snapshot.val().name == currentCustomerNickName || snapshot.val().name == currentCSNickName) {
                        $("#msg-list").html($("#msg-list").html() + getInsertHTML(snapshot.val().name, snapshot.val().content));
                        bottom_div.scrollIntoView();
                    }
                    //mui(".mui-scroll-wrapper").scroll().scrollToBottom(500);
                }
            });
        });

        $(".btnSent").on("tap", function () {
            var content = $("textarea").val();
            if (content == "" || content == undefined || content == null) {
                $("textarea").attr("placeholder", "发送的信息不能为空");
            }
            else {
                var mydate = new Date();
                var mytime = mydate.getTime();

                var currentCSOpenId = localStorage.getItem("CurrentCSOpenId");
                var currentCSNickName = localStorage.getItem("CurrentCSNickName");

                if (currentCSOpenId == null || currentCSOpenId == undefined || currentCSOpenId == "") {
                    mui.toast("请选择一个客服");
                    return false;
                }

                // 发送数据给 野狗
                data.child(currentCSOpenId).child(currentCustomerOpenId).child(mytime).set({
                    name: currentCustomerNickName,
                    content: content,
                    time: mytime
                });
                bottom_div.scrollIntoView();
                $("textarea").val("");
            }
        });

        // 加载聊天记录
        function getChatHistory(customerId, csId) {
            // 先判断 是否有 当前客户 的聊天记录
            var currentCustomerOpenIdChat = localStorage.getItem(customerId);

            if (currentCustomerOpenIdChat == null || currentCustomerOpenIdChat == undefined || String(currentCustomerOpenIdChat) == "") {
                // 如果没有 则 生成一个  顺便添加一个 元素到 对应的 json数组里面
                var tempstr = "[{\"CSOpenId\":\"" + csId + "\",\"Chat\":[]}]";

                localStorage.setItem(customerId, tempstr);
            }
            else {
                // 如果有 则 转成 json数组的形式
                // 遍历 并 加载到Html
                var tempjson = $.parseJSON(String(currentCustomerOpenIdChat));
                var html = $("#msg-list").html();

                $.each(tempjson, function (index, item) {
                    if (item.CSOpenId == csId) {
                        $.each(item.Chat, function (i, chat) {
                            html += getInsertHTML(chat.name, chat.content);
                        });
                        $("#msg-list").html(html);

                        return false;
                    }
                });
            }
        }

        // 拼接聊天信息
        function getInsertHTML(username, content) {

            if (username != currentCustomerNickName) {
                var string = "<div class='youdialog mui-col'><div class='youcontent mui-col-xs-10'><p class='tip-bubble tip-bubble-left'>" + content + "</p></div><img class='CSImage mui-col-xs-1' src='../../Contents/images/user-photo.png' /></div>";
                return string;
            } else {
                var string = "<div class='mydialog mui-col'><div class='mycontent mui-col-xs-10'><p class='tip-bubble tip-bubble-right'>" + content + "</p></div><img class='CSImage mui-col-xs-1' src='" + currentCustomerHeadImage + "' /></div>";
                return string;
            }
        }

        //获取随机数
        function getRandom(n) {
            return Math.floor(Math.random() * n + 1)
        }

        //清空聊天列表
        function clearChat() {
            $("#msg-list").html("");
        }
    </script>
</body>

</html>
